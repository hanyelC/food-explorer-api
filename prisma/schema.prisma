generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  admin     Boolean    @default(false)
  password  String
  favorites Favorite[]

  @@map("users")
}

model Category {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  description String
  products    ProductCategory[]

  @@map("categories")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  price       Float
  image_id    String
  ingredients String[]

  image      Image             @relation(fields: [image_id], references: [id])
  categories ProductCategory[]
  favorites  Favorite[]

  @@map("products")
}

model ProductCategory {
  fk_id_product  Int
  product        Product  @relation(fields: [fk_id_product], references: [id], onDelete: Cascade)
  fk_id_category Int
  category       Category @relation(fields: [fk_id_category], references: [id], onDelete: Cascade)

  @@id([fk_id_product, fk_id_category])
  @@map("product_category")
}

model Favorite {
  fk_id_user    Int
  user          User    @relation(fields: [fk_id_user], references: [id], onDelete: Cascade)
  fk_id_product Int
  product       Product @relation(fields: [fk_id_product], references: [id], onDelete: Cascade)

  @@id([fk_id_user, fk_id_product])
  @@map("favorites")
}

model Image {
  id         String @id
  image_data Bytes
  image_type String
  image_name String

  Product Product[]

  @@map("images")
}
